{"expireTime":9007200856730805000,"key":"gatsby-plugin-mdx-entire-payload-a7461b500166fb53e927006deddf7c47-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Category Theory","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"text","value":" is an ","position":{"start":{"line":2,"column":20,"offset":20},"end":{"line":2,"column":27,"offset":27},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"extremely","position":{"start":{"line":2,"column":28,"offset":28},"end":{"line":2,"column":37,"offset":37},"indent":[]}}],"position":{"start":{"line":2,"column":27,"offset":27},"end":{"line":2,"column":38,"offset":38},"indent":[]}},{"type":"text","value":" abstract branch of ","position":{"start":{"line":2,"column":38,"offset":38},"end":{"line":2,"column":58,"offset":58},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Mathematics","children":[{"type":"text","value":"Mathematics","position":{"start":{"line":2,"column":59,"offset":59},"end":{"line":2,"column":70,"offset":70},"indent":[]}}],"position":{"start":{"line":2,"column":58,"offset":58},"end":{"line":2,"column":114,"offset":114},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":2,"column":114,"offset":114},"end":{"line":2,"column":116,"offset":116},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":116,"offset":116},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Category Theory\"}","position":{"start":{"line":4,"column":1,"offset":118},"end":{"line":4,"column":56,"offset":173},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":56,"offset":173}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Category Theory\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Category Theory\"), \" is an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"extremely\"), \" abstract branch of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Mathematics\"\n  }), \"Mathematics\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Category Theory\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><strong parentName=\"p\">{`Category Theory`}</strong>{` is an `}<em parentName=\"p\">{`extremely`}</em>{` abstract branch of `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Mathematics\"\n      }}>{`Mathematics`}</a>{`. `}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}