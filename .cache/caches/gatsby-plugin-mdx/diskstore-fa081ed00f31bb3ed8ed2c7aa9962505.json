{"expireTime":9007200856739883000,"key":"gatsby-plugin-mdx-entire-payload-bf35df0a608c156e00639112dedfe1b5-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This is a test ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":16,"offset":15},"indent":[]}},{"type":"link","title":null,"url":"/markdown","children":[{"type":"text","value":"Markdown","position":{"start":{"line":1,"column":17,"offset":16},"end":{"line":1,"column":25,"offset":24},"indent":[]}}],"position":{"start":{"line":1,"column":16,"offset":15},"end":{"line":1,"column":37,"offset":36},"indent":[]}},{"type":"text","value":" file. ","position":{"start":{"line":1,"column":37,"offset":36},"end":{"line":1,"column":44,"offset":43},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Hi there!","position":{"start":{"line":1,"column":45,"offset":44},"end":{"line":1,"column":54,"offset":53},"indent":[]}}],"position":{"start":{"line":1,"column":44,"offset":43},"end":{"line":1,"column":55,"offset":54},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thanks!","position":{"start":{"line":3,"column":1,"offset":56},"end":{"line":3,"column":8,"offset":63},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":56},"end":{"line":3,"column":8,"offset":63},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":6,"column":1,"offset":66},"end":{"line":6,"column":31,"offset":96},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":6,"column":31,"offset":96}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a test \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/markdown\"\n  }), \"Markdown\"), \" file. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Hi there!\")), mdx(\"p\", null, \"Thanks!\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`This is a test `}<a parentName=\"p\" {...{\n        \"href\": \"/markdown\"\n      }}>{`Markdown`}</a>{` file. `}<em parentName=\"p\">{`Hi there!`}</em></p>\n    <p>{`Thanks!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}