{"expireTime":9007200856726060000,"key":"gatsby-plugin-mdx-entire-payload-bf407c5fd4d50165ca41612c38864abd-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This is a test Markdown file. ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":31,"offset":30},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Hi there!","position":{"start":{"line":1,"column":32,"offset":31},"end":{"line":1,"column":41,"offset":40},"indent":[]}}],"position":{"start":{"line":1,"column":31,"offset":30},"end":{"line":1,"column":42,"offset":41},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":42,"offset":41},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thanks!","position":{"start":{"line":3,"column":1,"offset":43},"end":{"line":3,"column":8,"offset":50},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":43},"end":{"line":3,"column":8,"offset":50},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"testmd\"}","position":{"start":{"line":6,"column":1,"offset":53},"end":{"line":6,"column":47,"offset":99},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":6,"column":47,"offset":99}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"testmd\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a test Markdown file. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Hi there!\")), mdx(\"p\", null, \"Thanks!\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"testmd\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`This is a test Markdown file. `}<em parentName=\"p\">{`Hi there!`}</em></p>\n    <p>{`Thanks!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}